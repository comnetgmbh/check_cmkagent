#!/usr/bin/python

#
# Copyright 2018 Nikolas Hagemann comNET GmbH <nikolas.hagemann@comnetgmbh.com>
#
# This file is part of check_cmkagent.
#
# check_cmkagent is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# check_cmkagent is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with check_cmkagent.  If not, see <http://www.gnu.org/licenses/>.
#

from modules import check_cmkagent
import argparse

DATA_PATH = '/var/lib/check_cmkagent'

parser = argparse.ArgumentParser(description = 'Check for check_mk_agent')
parser.add_argument('-H', '--host', required = True)
parser.add_argument('-s', '--section', required = True)
parser.add_argument('-a', '--argument')
parser.add_argument('-w', '--warn')
parser.add_argument('-c', '--crit')
args = parser.parse_args()

def read_file(filename):
    with open(filename, 'r') as f:
        agent_output = []
        line = f.readline()
        while line:
            agent_output.append(line.rstrip().split())
            line = f.readline()
        return agent_output


def find_agent_section(filename, section):
    agent_output = read_file(filename)
    relevant_output = []
    is_relevant = False
    for line in agent_output:
        if len(line) > 0:
            if line[0].startswith('<<<'):
                if section in line[0]:
                    is_relevant = True
                else:
                    is_relevant = False
            elif is_relevant:
                relevant_output.append(line)
    return relevant_output


filename = DATA_PATH + '/' + args.host
relevant_output = find_agent_section(filename, args.section)

params = (args.warn, args.crit)
test = check_cmkagent.Check_cmkagent.check('Check_' + args.section, relevant_output, args.argument, params)
